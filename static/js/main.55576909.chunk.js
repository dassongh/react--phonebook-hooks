(this["webpackJsonpreact--phonebook-hooks"]=this["webpackJsonpreact--phonebook-hooks"]||[]).push([[0],{15:function(e,t,n){},17:function(e,t,n){"use strict";n.r(t);var a=n(1),c=n.n(a),r=n(8),o=n.n(r),s=(n(15),n(7)),i=n(2),u=n(10),b=n(4),l=n.n(b),m=n(0);function j(e){var t=e.onSubmit,n=Object(a.useState)(""),c=Object(i.a)(n,2),r=c[0],o=c[1],s=Object(a.useState)(""),u=Object(i.a)(s,2),b=u[0],j=u[1],d=function(e){var t=e.currentTarget,n=t.name,a=t.value;switch(n){case"name":o(a);break;case"number":j(a);break;default:return}};return Object(m.jsxs)("form",{onSubmit:function(e){e.preventDefault(),t(r,b),e.currentTarget.reset()},children:[Object(m.jsxs)("label",{className:l.a.label,children:[Object(m.jsx)("span",{className:l.a.name,children:"Name"}),Object(m.jsx)("input",{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",onChange:d,required:!0})]}),Object(m.jsxs)("label",{className:l.a.label,children:[Object(m.jsx)("span",{className:l.a.name,children:"Number"}),Object(m.jsx)("input",{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",onChange:d,required:!0})]}),Object(m.jsx)("button",{type:"submit",children:"Add contact"})]})}function d(e){var t=e.onChange;return Object(m.jsxs)("label",{children:["Find contacts by name",Object(m.jsx)("input",{type:"text",name:"filter",onChange:t})]})}function O(e){var t=e.name,n=e.number,a=e.onRemove;return Object(m.jsxs)("li",{className:"item",children:[t,": ",n,Object(m.jsx)("button",{className:"rmv-btn",type:"button",onClick:a,children:"remove"})]})}function h(e){var t=e.contacts,n=e.onFilter,a=e.onRemove;return Object(m.jsxs)("div",{children:[Object(m.jsx)(d,{onChange:n}),Object(m.jsx)("ul",{children:t.map((function(e){var t=e.id,n=e.name,c=e.number;return Object(m.jsx)(O,{name:n,number:c,onRemove:a},t)}))})]})}var f=n(9),p=n.n(f);var x=function(){var e=Object(a.useState)([]),t=Object(i.a)(e,2),n=t[0],c=t[1],r=Object(a.useState)(""),o=Object(i.a)(r,2),b=o[0],l=o[1];Object(a.useEffect)((function(){var e=JSON.parse(window.localStorage.getItem("contacts"));c(e)}),[]),Object(a.useEffect)((function(){window.localStorage.setItem("contacts",JSON.stringify(n))}),[n]);var d=function(){var e=b.toLowerCase().trim();return n.filter((function(t){return t.name.toLowerCase().includes(e)}))}().reverse();return Object(m.jsxs)("div",{className:p.a.container,children:[Object(m.jsx)("h2",{children:"Phonebook"}),Object(m.jsx)(j,{onSubmit:function(e,t){if(n.some((function(t){return t.name===e})))return alert("".concat(e," is already in contacts"));c((function(n){return[].concat(Object(s.a)(n),[{name:e,number:t,id:Object(u.a)()}])}))}}),Object(m.jsx)("h2",{children:"Contacts"}),Object(m.jsx)(h,{contacts:d,onRemove:function(e){var t=e.currentTarget.parentNode.childNodes[0].data,a=n.find((function(e){return e.name===t}));n.splice(n.indexOf(a),1),c(Object(s.a)(n))},onFilter:function(e){l(e.currentTarget.value)}})]})};o.a.render(Object(m.jsx)(c.a.StrictMode,{children:Object(m.jsx)(x,{})}),document.getElementById("root"))},4:function(e,t,n){e.exports={label:"ContactForm_label__Ar5yO",name:"ContactForm_name__2eZfo"}},9:function(e,t,n){e.exports={container:"App_container__3S3Dd"}}},[[17,1,2]]]);
//# sourceMappingURL=main.55576909.chunk.js.map